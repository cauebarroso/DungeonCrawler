#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <locale.h>
#include <windows.h>
#include <conio.h>
#include <unistd.h>
#include <pthread.h>

//DECLARANDO AS VARIÁVEIS
initconio();

char matriz1 [10][10];
char matriz2 [20][20];
char matriz3 [40][40];


  int fim1 = 0;
  int fim2 = 0;
  int fim3 = 0;
  
  char tecla1;
  char tecla2;
  char tecla3;
  
  int x=4;
  int y=2;
  
  int x2=15;
  int y2=15;
  
  int x3=20;
  int y3=20;
  
  char chave1='@';
  char chave2=' ';
  char chave3=' ';
  	
  char porta1='D';
  char porta2='D';
  char porta3='D';

  char botao2='O';
  char botao3='O';
  	
  char espinho2='#';
  char espinho3='#';
  	
  int eminemX2=4;
  int eminemY2=5;
  
  int eminemX3= 13;
  int eminemY3= 12;
	
  int lifes=3;
  int lixo;
  
  char teletransporte= '<';
  char teletransporte2= '<';
  
  
  int npcX=33;
  int npcY=29;
  int monstro2x=38;
  int monstro2y=1;		
		

    //INICIO DA 1 FASE!
  void historinha()
{
	
	char historia[] =  
					   "\n\t\t|   No pacífico vilarejo de Kokiri, situado na periferia do grande reino de Hyrule, Girotto vivia em harmonia|"
	                   "\n\t\t|com a natureza e a magia que permeava a terra. Um dia, uma força sombria, liderada por um misterioso        |"
	                   "\n\t\t|inimigo, invadiu Kokiri, selando suas fronteiras com portas mágicas e espalhando criaturas perigosas por    |"
                       "\n\t\t|todos os cantos. Os anciãos do vilarejo revelaram que a única esperança era reunir as antigas chaves        |"
					   "\n\t\t|mágicas, forjadas pelos sábios de Hyrule, escondidas por todo o reino. Com coragem e determinação,          |"
					   "\n\t\t|Girotto decidiu enfrentar os perigos e recuperar as chaves para salvar seu lar e restaurar a paz em sua vila|"
                       "\n\t\t|e em todo o reino.                                                                                          |";
                       
	
	int h;
		    for (h = 0; historia[h] != '\0'; h++) {
		        printf("%c", historia[h]);
		        fflush(stdout);
		        usleep(15000);
		    }
		    
			Sleep(5000);
} 



void mapa1(char matriz1[10][10],int x, int y, char chave1, char porta1)
{	
	int i,j;	
		for(i = 0; i < 10; i++)
    	{
        	for(j = 0; j < 10; j++)
        	{	
        		if(i==y && j==x)
				{
					matriz1[i][j]='&';
				}
				else
				{
        			if(i==9 && j==7)
					{
						matriz1[i][j]=porta1;
					}
					else
					{ 
        				if(i==3 && j==7)
						{
							matriz1[i][j]=chave1;
						}
						else
						{			
   							if(i==0 || i==9)
							{
			 	 	 	 	 	matriz1[i][j]='*';printf("\n");
							}
							else
							{
								if(j==0 || j==9)
								{
									matriz1[i][j]='*';
								}
								else
								{					
									matriz1[i][j]=' ';
					    		}								
	    		        	}		
						}
					}
				}
        	}
    	}
    system("cls");
    printf("\n\n\n\n\n\n\n\n");
    	for(i = 0; i < 10; i++)
    	{
    		printf("\t\t\t\t\t\t\t");
        	for(j = 0; j < 10; j++)
        	{
        		printf(" ");
            	printf("%c", matriz1[i][j]);
        	}
        	printf("\n");
    	}
}


//MOVIMENTAÇAÕ DO PERSONAGEM DA 1 FASE
void movimentacao1()
{
	char tecla1;
	tecla1 = getch();
    	switch(tecla1)
		{
			case 'w':
				if(y==1)
				{}
				else
				{
					y--;	
				}					
				break;
			case 's':
				if((y==8 && matriz1[9][7]=='D')&& (x!=7 || x==7))
				{}
				else
				{
					if(y==8 && x!=7)
					{}
					else
					{						
						y++;
						if(y==9 && x==7)
						{
							fim1=1;
						}
						else{}
					}
				}
				break;	
			case 'a':
				if(x==1)
				{}
				else
				{
					x--;
				}
				break;
			case 'd':
				if(x==8)
				{}
				else
				{
					x++;
				}
				break;
			case 'i':
				if(x==7 && y==3)
				{
						printf("\n\n\n");					
					    Sleep(20);
					   printf("\t\t\t\t\t\t#######  ####### #######  ####### ######  ####### ###     ##  #######\n");
					    Sleep(20);
						system("color 05");
					    printf("\t\t\t\t\t\t##    ## ##   ## ##    ## ##   ## ##   ## ##      ## #    ##  ##\n");
					    Sleep(20);
						system("color 04");
					    printf("\t\t\t\t\t\t##    ## ##   ## ##    ## ##   ## ######  ##      ##  #   ##  #######\n");
					    Sleep(20);
						system("color 07");
					    printf("\t\t\t\t\t\t######   ####### #######  ####### #    ## #####   ##   #  ##       ##\n");
					    Sleep(20);
						system("color 08");
					    printf("\t\t\t\t\t\t##       ##   ## ## ##    ##   ## ##   ## ##      ##    # ##       ##\n");
					    Sleep(20);
						system("color 09");
					   printf("\t\t\t\t\t\t##       ##   ## ##  ##   ##   ## ######  ####### ##     ###  #######\n");
					    Sleep(20);
						system("color 06");
						Sleep(900);
						system("cls");
    					system("color 07");
					chave1=' ';
					porta1='=';
				}
				else{}
				default:
				break;

		}
}

//INICIO DA 2 FASE!
void mapa2(char matriz2[20][20],int x2, int y2, char chave2, char porta2, char botao2, int eminemY2, int eminemX2, char espinho2) 
{
	int i,j;

	for(i = 0; i < 20; i++) 
	{
		for(j = 0; j < 20; j++) 
		{
			if (i==eminemY2 && j==eminemX2 ) 
			{
				matriz2[i][j]='X';
			}
			else 
			{
				if(i==y2 && j==x2) 
				{
					matriz2[i][j]='&';
				}
				else 
				{
					if(i==0 && j==15) 
					{
						matriz2[i][j]=porta2;
					}
					else 
					{
						if(i==17 && j==18) 
						{
							matriz2[i][j]=botao2;
						}
						else 
						{
							if (i==15 && j==15) 
							{
								matriz2[i][j]=chave2;
							}
							else 
							{

								if(i==0 || i==19) 
								{
									matriz2[i][j]='*';
									printf("\n");
								}
								else 
								{
									if(j==0 || j==19) 
									{
										matriz2[i][j]='*';
									}
									else 
									{
										matriz2[i][j]=' ';
									}
									
										//espinhos
										if(i==1 && j ==6 || i==1 && j ==7 || i==1 && j ==8 || i==1 && j ==9 || i==1 && j ==12 ||i==1 && j ==16)
										{
											matriz2[i][j] = '#';
										}
										if(i==2 && j ==3 || i==2 && j ==4 || i==2 && j ==5 || i==2 && j ==7 || i==2 && j ==7 ||i==2 && j ==16)
										{
											matriz2[i][j] = '#';
										}
								
										//labirinto
										if(i == 16 && j == 17 || i == 16 && j == 18 || i == 16 && j == 18)
										{
											matriz2[i][j] = '#';
										}
										if(i == 17 && j == 16 ||i == 17 && j == 17 || i == 17 && j == 18)
										{
											matriz2 [i][j] = '#';
										}
									
								}
							}
						}
					}
				}
			}
		}
	}
	system("cls");
	printf("\n\n\n\n\n\n\n\n");
	for(i = 0; i < 20; i++) 
	{
		printf("\t\t\t\t\t\t\t");
		for(j = 0; j < 20; j++) 
		{
			printf(" ");
			printf("%c", matriz2[i][j]);
		}
		printf("\n");
	}
}
  //MOVIMENTAÇÃO DO INIMIGO
  void eminemMove2() 
{
	int eminem2;
	srand(time(NULL));
	eminem2 = 1 + (rand() % 4);
	
	switch (eminem2) 
	{
		case 1:
			if(eminemY2==1) 
			{} 
			else 
			{
				eminemY2--;
			}
			break;
		case 2:
			if(eminemY2==18) 
			{} 
			else 
			{
				eminemY2++;

			}
			break;
		case 3:
			if(eminemX2==1) 
			{} 
			else 
			{
				eminemX2--;
			}
			break;
		case 4:
			if(eminemX2==18) 
			{} 
			else 
			{
				eminemX2++;
			}
			break;
	}
}
  
  //MOVIMENTAÇÃO DO PERSONAGEM NA 2 FASE
  void movimentacao2() 
{
		char tecla2;
	tecla2 = getch();
	switch(tecla2)
	{
		case 'w':
			if((y2==1 && matriz2[0][15]=='D')&& (x2!=15 || x2==15)) 
			{} 
			else 
			{
				if(y2==1 && x2!=15) 
				{}
				else 
				{
					y2--;
					eminemMove2();
					if(y2==0 && x2==15) 
					{
						fim2=1;
					} 
					else {}
						if (x2==eminemX2 && y2==eminemY2) 
						{
							lifes--;
							x2=15;
							y2=15;
							chave2=' ';
							porta2='D';
							botao2='O';
							int eminemX2=4;
  int eminemY2=5;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
								} 
								else {}
						} 
						else {}							
							//verificar o dano do espinho							
							if (matriz2[y2][x2] == espinho2) 
							{
								printf("\t\t\t\t\t\tVoce sofreu dano!\n");
								Sleep(900);
								lifes--;
								x2=15;
								y2=15;
								chave2=' ';
								porta2='D';
								botao2='O';
								int eminemX2=4;
  int eminemY2=5;
									if (lifes==0) 
									{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
									} 
									else {}
							}
							
				}
			}
			break;
		case 's':
			if(y2==18) 
			{} 
			else 
			{
				y2++;
				eminemMove2();
					if (x2==eminemX2 && y2==eminemY2) 
					{
						lifes--;
						x2=15;
						y2=15;
						chave2=' ';
						porta2='D';
						botao2='O';
						int eminemX2=4;
  int eminemY2=5;
							if (lifes==0) 
							{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
							} 
							else {}
					} 
					else {}					
					//verificar o dano do espinho
						if (matriz2[y2][x2] == espinho2) 
						{
							printf("\t\t\t\t\t\tVoce sofreu dano!\n");
							Sleep(900);
							lifes--;
							x2=15;
							y2=15;
							chave2=' ';
							porta2='D';
							botao2='O';
							int eminemX2=4;
  int eminemY2=5;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
								} 
								else {}
						}
							
			
			break;
		case 'a':
			if(x2==1) 
			{} 
			else 
			{
				x2--;
				eminemMove2();
					if (x2==eminemX2 && y2==eminemY2) 
					{
						lifes--;
						x2=15;
						y2=15;
						chave2=' ';
						porta2='D';
						botao2='O';
					int eminemX2=4;
  int eminemY2=5;
							if (lifes==0) 
							{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
							} 
							else {}
					} 
					else {}					
					//verificar o dano do espinho							
						if (matriz2[y2][x2] == espinho2) 
						{
							printf("\t\t\t\t\t\tVoce sofreu dano!\n");
							Sleep(900);
							lifes--;
							x2=15;
							y2=15;
							chave2=' ';
							porta2='D';
							botao2='O';
							int eminemX2=4;
  int eminemY2=5;;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
								} 
								else {}
						}	
			}							
			break;
		case 'd':
			if(x2==18) 
			{} 
			else 
			{
				x2++;
				eminemMove2();
					if (x2==eminemX2 && y2==eminemY2) 
					{
						lifes--;
						x2=15;
						y2=15;
						chave2=' ';
						porta2='D';
						botao2='O';
						int eminemX2=4;
  int eminemY2=5;;
							if (lifes==0) 
							{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
							} 
							else {}
					} 
					else {}						
						//verificar o dano do espinho			
						if (matriz2[y2][x2] == espinho2) 
						{
							printf("\t\t\t\t\t\tVoce sofreu dano!\n");
							Sleep(900);
							lifes--;
							x2=15;
							y2=15;
							chave2=' ';
							porta2='D';
							botao2='O';
							int eminemX2=4;
  int eminemY2=5;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim2=1;
								break;
								} 
								else {}
						}
							
						
			}
			break;
		case 'i':
			if(x2==18 && y2==17) 
			{
				chave2='@';
				botao2=' ';
			} 
			else {}
				if (x2==15 && y2==15 && chave2=='@') 
				{
						printf("\n\n\n");					
					    Sleep(20);
					   printf("\t\t\t\t\t\t######  ####### #######  ####### ######  ####### ###     ##  #######\n");
					    Sleep(20);
						system("color 05");
					    printf("\t\t\t\t\t\t##    ## ##   ## ##    ## ##   ## ##   ## ##      ## #    ##  ##\n");
					    Sleep(20);
						system("color 04");
					    printf("\t\t\t\t\t\t##    ## ##   ## ##    ## ##   ## ######  ##      ##  #   ##  #######\n");
					    Sleep(20);
						system("color 07");
					    printf("\t\t\t\t\t\t######   ####### #######  ####### #    ## #####   ##   #  ##       ##\n");
					    Sleep(20);
						system("color 08");
					    printf("\t\t\t\t\t\t##       ##   ## ## ##    ##   ## ##   ## ##      ##    # ##       ##\n");
					    Sleep(20);
						system("color 09");
					   printf("\t\t\t\t\t\t##       ##   ## ##  ##   ##   ## ######  ####### ##     ###  #######\n");
					    Sleep(20);
						system("color 06");
						Sleep(900);
						system("cls");
    					system("color 07");
					porta2='=';
					chave2=' ';
				}
				default:
				break;
			}
	}
}

  //INICIO JOGO 3!
void mapa3(char matriz3[40][40],int x3, int y3, char chave3, char porta3, char botao3, int npcY, int npcX, int monstro2y, int monstro2x, char espinho3, char teletransporte2) 
{
	int i,j;

	for(i = 0; i < 40; i++) 
	{
		for(j = 0; j < 40; j++) 
		{
			if (i==npcY && j==npcX) 
			{
				matriz3[i][j]='X';
			}else
				
				if(i == monstro2y && j == monstro2x)
				{
					matriz3[i][j]='V';
				}
				else
				
				if(i==16 && j==13)
				{
					matriz3[i][j]='>';
				}
				
				else
				
		
			
				if (i==y3 && j==x3){
					 matriz3[i][j] = '&';
				}
			
			else
			{
			
				
				{
					if(i==0 && j==15) 
					{
						matriz3[i][j]=porta3;
					}
					else 
					{
						if(i==27 && j==18) 
						{
							matriz3[i][j]=botao3;
						}
						else 
						{
							if (i==15 && j==15) 
							{
								matriz3[i][j]=chave3;
							}
							else 
							{

								if(i==0 || i==39) 
								{
									matriz3[i][j]='*';
									printf("\n");
								}
								else 
								{
									if(j==0 || j==39) 
									{
										matriz3[i][j]='*';
									}
									else 
									{
										matriz3[i][j]=' ';
									}
									
										//espinhos
										if(i==1 && j ==1 || i==1 && j ==2 || i==1 && j ==3 || i==1 && j ==4 || i==1 && j ==5 ||i==1 && j ==6 ||i==1 && j ==7 ||i==1 && j ==8 ||i==1 && j ==9 || i==1 && j==10||i==1 && j==11||i==1 && j==12||i==1 && j==13||i==1 && j==14)
										{
											matriz3[i][j] = '#';
										}
										if(i==9 && j ==14 || i==8 && j ==14 || i==7 && j ==14 || i==4 && j ==14 || i==5 && j ==14 ||i==6 && j ==14 ||i==7 && j ==14 ||i==8 && j ==14 ||i==9 && j ==14 || i==10 && j==14||i==11 && j==14)
										{
											matriz3[i][j] = '#';
										}
										if(i==1 && j ==16 || i==2 && j ==16 || i==3 && j ==16 || i==4 && j ==16 || i==5 && j ==16 ||i==6 && j ==16||i==7 && j ==16||i==8 && j ==16||i==9 && j ==16)
										{
										matriz3[i][j] = '#';
										}
										if(i==11 && j==14||i==11 && j==15||i==11 && j==16||i==11 && j==17||i==11 && j==18||i==11 && j==19||i==11 && j==20||i==11 && j==21||i==11 && j==22||i==11 && j==23||i==11 && j==24||i==11 && j==25||i==11 && j==26||i==11 && j==27||i==11 && j==28||i==11 && j==29||i==11 && j==30||i==11 && j==31||i==11 && j==32||i==11 && j==33||i==11 && j==34||i==11 && j==35||i==11 && j==36||i==11 && j==37)
										{
											matriz3[i][j] = '#';
										}
										
										if(i==12 && j==37||i==13 && j==37||i==14 && j==37||i==15 && j==37||i==16 && j==37||i==17 && j==37||i==18 && j==37||i==19 && j==37||i==20 && j==37||i==21 && j==37||i==22 && j==37||i==23 && j==37||i==24 && j==37||i==25 && j==37||i==26 && j==37||i==27 && j==37||i==28 && j==37||i==29 && j==37||i==30 && j==37||i==31 && j==37||i==32 && j==37||i==33 && j==37||i==34 && j==37||i==35 && j==37||i==36 && j==37||i==37 && j==37||i==38 && j==37||i==39 && j==37||i==40 && j==37||i==31 && j==37||i==32 && j==37||i==33 && j==37||i==34 && j==37||i==35 && j==37||i==36 && j==37||i==37 && j==37||i==38 && j==37||i==39 && j==37)
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 39 && j == 38 || i == 49 && j == 39 || i == 49 && j == 40)
										{
										matriz3[i][j] = '#';
										}
										
										if(i==9 && j==14||i==9 && j==16||i==9 && j==17||i==9 && j==18||i==9 && j==19||i==9 && j==20||i==9 && j==21||i==9 && j==22||i==9 && j==23||i==9 && j==24||i==9 && j==25||i==9 && j==26||i==9 && j==27||i==9 && j==28||i==9 && j==29||i==9 && j==30 || i==9 && j==31 || i==9 && j==32 || i==9 && j== 33|| i==9 && j==34||i==9 && j==35||i==9 && j==36||i==9 && j==37||i==9 && j==38||i==9 && j==39||i==9 && j==40)
										{
											matriz3[i][j] = '#';
										}
										
										if(i==9 && j==40||i==10 && j==40||i==11 && j==40||i==12 && j==40||i==13 && j==40||i==14 && j==40||i==15 && j==40||i==16 && j==40||i==17 && j==40||i==18 && j==40||i==19 && j==40||i==20 && j==40||i==21 && j==40||i==22 && j==40||i==23 && j==40||i==24 && j==40 || i==25 && j==40 || i==26 && j==40 || i==27 && j== 40)
										{
											matriz3[i][j] = '#';
										}
										
																
										if(i == 26 && j == 17 || i == 26 && j == 18 || i == 26 && j == 19)
										{
										matriz3[i][j] = '#';
										}
										if(i == 27 && j == 16 ||i == 27 && j == 17 || i == 27 && j == 19)
										{
										matriz3[i][j] = '#';
										}
										if(i == 28 && j == 19)
										{
											matriz3[i][j] = '#';
										}
										
										if(i==28 && j==40||i==29 && j== 40 ||i==30 && j== 40 ||i==31 && j== 40 ||i==32 && j== 40 ||i==33 && j== 40 ||i==34 && j== 40 ||i==35 && j== 40 ||i==36 && j== 40 ||i==37 && j== 40 ||i==38 && j== 40 ||i==39 && j== 40 ||i==40 && j== 40 ||i==31 && j== 40 ||i==32 && j== 40||i==33 && j== 40 || i==34 && j== 40 || i==35 && j== 40 || i==36 && j== 40)
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 36 && j == 31 ||i == 36 && j == 32 || i == 36 && j == 33 || i == 36 && j == 34)
										{
										matriz3[i][j] = '#';
										}
										
										if(i == 37 && j == 34 ||i == 38 && j == 34 || i == 39 && j == 34 || i == 40 && j == 34|| i == 31 && j == 34 )
										{
										matriz3[i][j] = '#';
										}
										
										if(i == 41 && j == 33 ||i == 31 && j == 32 || i == 31 && j == 31 || i == 31 && j == 40|| i == 31 && j == 39 || i == 31 && j == 38 || i == 31 && j == 37 || i == 31 && j == 36 || i == 31 && j == 35 || i == 31 && j ==34)
										{
										matriz3[i][j] = '#';
										}
										
										if( i == 40 && j ==34|| i == 39 && j ==34|| i == 38 && j ==34|| i == 37 && j ==34|| i == 36 && j ==34|| i == 35 && j ==34|| i == 34 && j ==34|| i == 33 && j ==34|| i == 32 && j ==34|| i == 31 && j ==34|| i == 30 && j ==34|| i == 39 && j ==34|| i == 38 && j ==34|| i == 37 && j ==34|| i == 36 && j ==34|| i == 35 && j ==34|| i == 34 && j ==34)
										{
											matriz3[i][j] = '#';
										}
										
										if( i == 33 && j ==34|| i == 32 && j ==34|| i == 31 && j ==34|| i == 30 && j ==34|| i == 29 && j ==34|| i == 28 && j ==34|| i == 27 && j ==34|| i == 26 && j ==34|| i == 25 && j ==34 || i == 24 && j == 34 || i == 23 && j == 34 || i == 22 && j == 34)
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 14 && j == 32 ||i == 14 && j == 33 || i == 14 && j == 34 || i == 14 && j == 35|| i == 14 && j == 36)
										{
										matriz3[i][j] = '#';
										}
										
										if(i == 16 && j == 15 ||i == 16 && j == 16||i == 16 && j == 17 ||i == 16 && j == 18 ||i == 16 && j == 19 ||i == 16 && j == 20||i == 16 && j == 21||i == 16 && j == 22||i == 16 && j == 23||i == 16 && j == 24 ||i == 16 && j == 25 ||i == 16 && j == 26)
										{
										matriz3[i][j] = '#';
										}
										
										if(i == 14 && j == 15 || i == 14 && j == 17||i == 14 && j == 18||i == 14 && j == 19||i == 14 && j == 20||i == 14 && j == 21||i == 14 && j == 22||i == 14 && j == 23||i == 14 && j == 24||i == 14 && j == 25||i == 14 && j == 26||i == 14 && j ==27 ||i == 14 && j == 28||i == 14 && j == 29||i == 14 && j == 30||i == 14 && j == 31 )
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 17 && j == 26 ||i == 18 && j == 26||i == 19 && j == 26||i == 20 && j == 26||i == 21 && j == 26||i == 22 && j == 26)
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 22 && j == 27 ||i == 22 && j == 28||i == 22 && j == 29||i == 22 && j == 30||i == 22 && j == 31||i == 22 && j == 32 || i == 22 && j == 33)
										{
											matriz3[i][j] = '#';
										}
										if(i == 39 && j == 33 || i == 35 && j == 6)
										{
											matriz3[i][j] = '<';
										}
										
										if(i == 32 && j == 6|| i == 32 && j == 7||i == 32 && j == 8||i == 32 && j == 9||i == 32 && j == 11||i == 32 && j == 7||i == 32 && j == 9||i == 32 && j == 12||i == 32 && j == 20||i == 32 && j == 22)
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 37 && j == 6|| i == 37 && j == 7||i == 37 && j == 8||i == 37 && j == 9||i == 37 && j == 10||i == 37 && j == 5||i == 37 && j == 4||i == 37 && j == 3||i == 37 && j == 2||i == 37 && j == 1)
										{
											matriz3[i][j] = '#';
										}
										
										if(i == 37 && j == 11|| i == 33 && j == 11||i == 34 && j == 11||i == 35 && j == 11||i == 36 && j == 11)
										{
											matriz3[i][j] = '#';
										}



								}
							}
						}
					}
				}
			}
		}
	}
	system("cls");
	printf("\n\n\n\n\n\n\n\n");
	for(i = 0; i < 40; i++) 
	{
		printf("\t\t\t\t\t\t\t");
		for(j = 0; j < 40; j++) 
		{
			printf(" ");
			printf("%c", matriz3[i][j]);
		}
		printf("\n");
	}
}

//MOVIMENTAÇÃO DO INIMIGO DA 3 FASE
void npcMove() 
{
	int npc;
	srand(time(NULL));
	npc = 1 + (rand() % 4);

	
	switch (npc) 
	{
		case 1:
			if(npcY==1) 
			{} 
			else 
			{
				npcY--;
			}
			break;
		case 2:
			if(npcY==38) 
			{} 
			else 
			{
				npcY++;

			}
			break;
		case 3:
			if(npcX==1) 
			{} 
			else 
			{
				npcX--;
			}
			break;
		case 4:
			if(npcX==38) 
			{} 
			else 
			{
				npcX++;
			}
			break;
	} 
	

}

//MOVIMENTAÇÃO DO INIMIGO 2
	
void mover_monstro() {
    // Calcula as diferenças entre as coordenadas do monstro e do jogador
    int diff_x = x3 - monstro2x;
    int diff_y = y3 - monstro2y;

    // Move o monstro na direção onde a diferença é maior
    if (abs(diff_x) > abs(diff_y)) {
        // Se a diferença horizontal é maior, move na direção horizontal
        if (diff_x > 0)
            monstro2x++;
        else if (diff_x < 0)
            monstro2x--;
    } else {
        // Se a diferença vertical é maior ou igual, move na direção vertical
        if (diff_y > 0)
            monstro2y++;
        else if (diff_y < 0)
            monstro2y--;
    }
}
	


//MOVIMENTAÇÃO DO PERSONAGEM DA 3 FASE
void movimentacao3() 
{
		char tecla3;
	tecla3 = getch();
	switch(tecla3) 
	{
		case 'w':
			if((y3==1 && matriz3[0][15]=='D')&& (x3!=15 || x3==15) && (y3==1 && matriz3[0][13]=='D')&& (x3!=13 || x3==13) && (y3==1 && matriz3[0][12]=='D')&& (x3!=12 || x3==12) && (y3==1 && matriz3[0][11]=='D')&& (x3!=11 || x3==11)) 
			{} 
			else 
			{
				if((y3==1 && x3!=15) && (y3==1 && x3!=13) && (y3==1 && x3!=12) && (y3==1 && x3!=11)) 
				{}
				else 
				{
					y3--;
					npcMove();
						if(y3==0 && x3==15) 
						{
						system("cls");
						char final[] = 
					   "\n\t\t|Após uma longa e árdua jornada, Girotto finalmente reuniu todas as chaves e abriu as portas que selavam          |"
	                   "\n\t\t|Kokiri. A luz mágica dos sábios de Hyrule expulsou as trevas e restaurou a paz no vilarejo. Os habitantes de     |"
	                   "\n\t\t|Kokiri comemoraram e agradeceram Girotto por sua bravura e determinação, garantindo um futuro                    |"
                       "\n\t\t|brilhante para todos em Kokiri e reafirmando os laços com o grande reino de Hyrule.                              |";
					  
						
						int f;
								    for (f = 0; final[f] != '\0'; f++) {
								        printf("%c", final[f]);
								        fflush(stdout);
								        usleep(15000);
						               	}
							 Sleep(5000);
			   
						 
						 
						fim3=1;
						} 
						else {}
							if ((x3 == npcX && y3 == npcY) || (x3 == monstro2x && y3 == monstro2y)) 
							{
							lifes--;
							x3=3;
							y3=4;
							chave3=' ';
							porta3='D';
							botao3='O';
							int npcX=33;
  int npcY=29;
							 int monstro2x=38;
  int monstro2y=1;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
								break;
								} 
								else {}
							} 
							else {}
							
							//verificar o dano do espinho
							
							if (matriz3[y3][x3] == espinho3) 
							{
								printf("\t\t\t\t\t\tVoce sofreu dano!\n");
								Sleep(900);
								lifes--;
								x3=15;
								y3=15;
								chave3=' ';
								porta3='D';
								botao3='O';
							int npcX=33;
  int npcY=29;
						 int monstro2x=38;
  int monstro2y=1;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
								break;
								} 
								else {}
							}
							
				}
			}
			break;
		case 's':
			if(y3==38) 
			{} 
			else 
			{
				y3++;
				npcMove();
					if((x3 == npcX && y3 == npcY) || (x3 == monstro2x && y3 == monstro2y)) 
					{
					lifes--;
					x3=3;
					y3=4;
					chave3=' ';
					porta3='D';
					botao3='O';
				int npcX=33;
  int npcY=29;
						 int monstro2x=38;
  int monstro2y=1;
						if (lifes==0) 
						{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
								break;
						} 
						else {}
					} 
					else {}
					
					//verificar o dano do espinho
							
							if (matriz3[y3][x3] == espinho3) 
							{
								printf("\t\t\t\t\t\tVoce sofreu dano!\n");
								Sleep(900);
								lifes--;
								x3=15;
								y3=15;
								chave3=' ';
								porta3='D';
								botao3='O';
							int npcX=33;
  int npcY=29;
						 int monstro2x=38;
  int monstro2y=1;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);;
								fim3=1;
								} 
								else {}
							}
							
			}
			break;
		case 'a':
			if(x3==1) 
			{} 
			else 
			{
				x3--;
				npcMove();
					if((x3 == npcX && y3 == npcY) || (x3 == monstro2x && y3 == monstro2y))
					{
					lifes--;
					x3=3;
					y3=4;
					chave3=' ';
					porta3='D';
					botao3='O';
					int npcX=33;
  int npcY=29;
						 int monstro2x=38;
  int monstro2y=1;
						if (lifes==0) 
						{
							printf("\n\n");
					system("color 05");
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
						} 
						else {}
					} 
					else {}
					
					//verificar o dano do espinho
							
							if (matriz3[y3][x3] == espinho3) 
							{
								printf("\t\t\t\t\t\tVoce sofreu dano!\n");
								Sleep(900);
								lifes--;
								x3=15;
								y3=15;
								chave3=' ';
								porta3='D';
								botao3='O';
							int npcX=33;
  int npcY=29;
							 int monstro2x=38;
  int monstro2y=1;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
								} 
								else {}
							}
							
					
				break;
			case 'd':
				if(x3==38) 
				{} 
				else 
				{
					x3++;
					npcMove();
						if((x3 == npcX && y3 == npcY) || (x3 == monstro2x && y3 == monstro2y))
						{
						lifes--;
						x3=3;
						y3=4;
						chave3=' ';
						porta3='D';
						botao3='O';
						int npcX=33;
  int npcY=29;
							 int monstro2x=30;
  int monstro2y=1;
							if (lifes==0) 
							{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
							} 
							else {}
						} 
						else {}
						
						//verificar o dano do espinho
							
							if (matriz3[y3][x3] == espinho3) 
							{
								printf("\t\t\t\t\t\tVoce sofreu dano!\n");
								Sleep(900);
								lifes--;
								x3=15;
								y3=15;
							
								chave3=' ';
								porta3='D';
								botao3='O';
								int npcX=33;
  int npcY=29;
						 int monstro2x=38;
  int monstro2y=1;
								if (lifes==0) 
								{
									printf("\n\n");
								system("color 05");
								printf("\t\t\t\t\t\t########  ######## ###        ### #######     ######## ##          ## ####### ######\n");
								Sleep(300);
								system("color 07");
								printf("\t\t\t\t\t\t##        ##    ## ## #      # ## ##          ##    ##  ##        ##  ##      ##    ##\n");
								Sleep(300);
								system("color 08");
								printf("\t\t\t\t\t\t##   ###  ######## ##   #  #   ## #####       ##    ##    ##    ##    #####   ######\n");
								Sleep(300);
								system("color 09");
								printf("\t\t\t\t\t\t##    ##  ##    ## ##    ##    ## ##          ##    ##      ####      ##      ##  ##\n");
								Sleep(300);
								printf("\t\t\t\t\t\t########  ##    ## ##          ## #######     ########       ##       ####### ##   ##\n");
								Sleep(300);
								system("color 07");
								Sleep(900);
								printf("\n\t\t\t\t\t\tDigite 1 e pressione enter para continuar...");
								scanf("%d", &lixo);
								fim3=1;
								} 
								else {}
							}
							
						
				}
				break;
			case 'i':
				if(x3==18 && y3==27) 
				{
					chave3='@';
					botao3=' ';
					teletransporte= '<';
					
				} 
				else {}
					if (x3==15 && y3==15 && chave3=='@') 
					{	
								printf("\n\n\n");					
					    Sleep(20);
					   printf("\t\t\t\t\t\t#######  ####### #######  ####### ######  ####### ###     ##  #######\n");
					    Sleep(20);
						system("color 05");
					    printf("\t\t\t\t\t\t##    ## ##   ## ##    ## ##   ## ##   ## ##      ## #    ##  ##\n");
					    Sleep(20);
						system("color 04");
					    printf("\t\t\t\t\t\t##    ## ##   ## ##    ## ##   ## ######  ##      ##  #   ##  #######\n");
					    Sleep(20);
						system("color 07");
					    printf("\t\t\t\t\t\t######   ####### #######  ####### #    ## #####   ##   #  ##       ##\n");
					    Sleep(20);
						system("color 08");
					    printf("\t\t\t\t\t\t##       ##   ## ## ##    ##   ## ##   ## ##      ##    # ##       ##\n");
					    Sleep(20);
						system("color 09");
					   printf("\t\t\t\t\t\t##       ##   ## ##  ##   ##   ## ######  ####### ##     ###  #######\n");
					    Sleep(20);
						system("color 06");
						Sleep(900);
						system("cls");
    					system("color 07");
					porta3='=';
					chave3=' ';
					matriz3[0][13]='*';
					matriz3[0][12]='*';
					matriz3[0][11]='*';
					}	
					if (x3==6 && y3==35 && teletransporte=='<')
					{
						printf("\n\n\n");
						printf("\t\t\t\t\t\t########  ######   ##     ######  #######  ######     #######  ###     ##  #######   ######   #######  #####   ########  ######\n");
						Sleep(300);
						system("color 01");
						printf("\t\t\t\t\t\t   ##     ##       ##     ##        ##     ##   ##    ##   ##  ## #    ##  ##        ##   ##  ##   ##  ##   ##    ##     ##\n");
						Sleep(300);
						system("color 02");
						printf("\t\t\t\t\t\t   ##     #####    ##     #####     ##     ######     #######  ##  #   ##  #######   ######   ##   ##  ######     ##     #####\n");
						Sleep(300);
						system("color 03");
						printf("\t\t\t\t\t\t   ##     ##       ##     ##        ##     ##  ##     ##   ##  ##   #  ##       ##   ##       ##   ##  ##         ##     ##\n");
						Sleep(300);
						system("color 04");
						printf("\t\t\t\t\t\t   ##     ######   #####  ######    ##     ##   ##    ##   ##  ##    ###   #######   ##       #######  ##         ##     ######\n");
						Sleep(300);
						system("color 05");
						
						 printf("\n\n\n");  
						printf("\t\t\t\t\t\t    #######  ########  ##  ##       ##  #######  ######    #######\n");
						Sleep(300);
						system("color 06");
						printf("\t\t\t\t\t\t    ##   ##     ##     ##   ##     ##   ##   ##  ##    ##  ##   ##\n");
						Sleep(300);
						system("color 08");
						printf("\t\t\t\t\t\t    #######     ##     ##    ##   ##    #######  ##    ##  ##   ##\n");
						Sleep(300);
						system("color 09");
						printf("\t\t\t\t\t\t    ##   ##     ##     ##     ## ##     ##   ##  ##    ##  ##   ##\n");
						Sleep(300);
						system("color 0A");
						printf("\t\t\t\t\t\t    ##   ##     ##     ##      ###      ##   ##  ######    #######\n");
						Sleep(300);
						system("color 07");

						 x3 = 12;
                         y3 = 15;
					}
					
					if (x3==13 && y3==16 && teletransporte=='<')
					{
						printf("\n\n\n");
						printf("\t\t\t\t\t\t########  ######   ##     ######  #######  ######     #######  ###     ##  #######   ######   #######  #####   ########  ######\n");
						Sleep(300);
						system("color 01");
						printf("\t\t\t\t\t\t   ##     ##       ##     ##        ##     ##   ##    ##   ##  ## #    ##  ##        ##   ##  ##   ##  ##   ##    ##     ##\n");
						Sleep(300);
						system("color 02");
						printf("\t\t\t\t\t\t   ##     #####    ##     #####     ##     ######     #######  ##  #   ##  #######   ######   ##   ##  ######     ##     #####\n");
						Sleep(300);
						system("color 03");
						printf("\t\t\t\t\t\t   ##     ##       ##     ##        ##     ##  ##     ##   ##  ##   #  ##       ##   ##       ##   ##  ##         ##     ##\n");
						Sleep(300);
						system("color 04");
						printf("\t\t\t\t\t\t   ##     ######   #####  ######    ##     ##   ##    ##   ##  ##    ###   #######   ##       #######  ##         ##     ######\n");
						Sleep(300);
						system("color 05");
						
						 printf("\n\n\n");  
						printf("\t\t\t\t\t\t    #######  ########  ##  ##       ##  #######  ######    #######\n");
						Sleep(300);
						system("color 06");
						printf("\t\t\t\t\t\t    ##   ##     ##     ##   ##     ##   ##   ##  ##    ##  ##   ##\n");
						Sleep(300);
						system("color 08");
						printf("\t\t\t\t\t\t    #######     ##     ##    ##   ##    #######  ##    ##  ##   ##\n");
						Sleep(300);
						system("color 09");
						printf("\t\t\t\t\t\t    ##   ##     ##     ##     ## ##     ##   ##  ##    ##  ##   ##\n");
						Sleep(300);
						system("color 0A");
						printf("\t\t\t\t\t\t    ##   ##     ##     ##      ###      ##   ##  ######    #######\n");
						Sleep(300);
						system("color 07");
						x3 = 6;
						y3 = 35;
					}
					
				
			default:
				break;
			}
	}
}

  
  
 
  
  
  void Jogo()
{
	while(fim1==0) //dinamica da fase1
	{	
		
		mapa1(matriz1,x,y,chave1,porta1);
	   	
		movimentacao1();	
    	
	}
	
	while(fim2==0) //dinamica da fase2
	{
		mapa2(matriz2,x2,y2,chave2,porta2,botao2,eminemY2,eminemX2,espinho2);

		movimentacao2();
	}
	
		while(fim3==0) //dinamica da fase3
	{
		mapa3(matriz3,x3,y3,chave3,porta3,botao3,npcY,npcX,monstro2y, monstro2x,espinho3,teletransporte2);

		movimentacao3();
		mover_monstro();
	}
	

}

// MENU PRINCIPAL


	int main()
{
	setlocale(LC_ALL, "Portuguese");
	int escolha_menu;
	int lixo;



    
    while(escolha_menu != 3)
	{

		system("cls");
   
        printf("\n\n");
        printf("\t\t\t\t\t\t       > ###   ###  ####  ###  ##  ##  ## <\n");
        printf("\t\t\t\t\t\t       > #### ####  ##    #### ##  ##  ## <\n");
        printf("\t\t\t\t\t\t       > ## ### ##  ####  ## ####  ##  ## <\n");
        printf("\t\t\t\t\t\t       > ##     ##  ##    ##  ###  ##  ## <\n");
        printf("\t\t\t\t\t\t       > ##     ##  ####  ##   ##  ###### <\n");
        
        
        printf("\n\n");
        printf("\t\t\t\t\t\t         -----------------------------\n\n");
        Sleep(300);
		
		printf("\t\t\t\t\t\t\t            JOGAR   \n");
		printf("\t\t\t\t\t\t\t              1     \n");
		
	
        Sleep(300);
		
		printf("\t\t\t\t\t\t\t           TUTORIAL \n");
		printf("\t\t\t\t\t\t\t              2     \n");
		

        Sleep(300);
        
		printf("\t\t\t\t\t\t\t            SAIR    \n");
		printf("\t\t\t\t\t\t\t              3     \n");
		
        Sleep(300);
        printf("\t\t\t\t\t\t        ------------------------------\n");
        Sleep(300);
        printf("\n\t\t\t\t\t\t\t==> ");
        
        scanf("%d", &escolha_menu);

		system("cls");

		switch(escolha_menu)
		{

		case (1):
			system("cls");
        	
        	
			char abrir[] = "\n\n\t\t\t\t\t\t   . . . . . . ABRINDO JOGO. . . . . . ";
			
			int a;
		    for (a = 0; abrir[a] != '\0'; a++) {
		        printf("%c", abrir[a]);
		        fflush(stdout);
		        usleep(20000);
		    }
		     Sleep(500);
		    system("cls");
			historinha();
			Jogo();
			
			
			break;
			
		case (2):
			
			system("cls");
        	
        	
			char tutorial[] = "\n\n\t\t\t\t\t\t   . . . . . . INICIANDO TUTORIAL . . . . . . ";
			
			int x;
		    for (x = 0; tutorial[x] != '\0'; x++) {
		        printf("%c", tutorial[x]);
		        fflush(stdout);
		        usleep(20000);
		    }
		    Sleep(500);
		    system("cls");
		  
		  	
		
		    
		  char frase[] = 
                   "\t\t   O jogo é do estilo aventura/puzzle onde o objetivo e o jogador conseguir passar de três fases.\n"
                   "\t\t   Em cada fase o jogador deve se movimentar para pegar uma chave para abrir a porta fechada.\n"
                   "\t\t   O jogador possui os seguintes comandos:                                                                     \n"
                   "\t\t   W: O jogador movimenta uma unidade para cima.                                                               \n"
                   "\t\t   A: O jogador movimenta uma unidade para a esquerda.                                                         \n"
                   "\t\t   S: O jogador movimenta uma unidade para baixo.                                                              \n"
                   "\t\t   D: O jogador movimenta uma unidade para direita.                                                            \n"
                   "\t\t   I: O jogador interage com o objeto que está em cima.                                                        \n"
                   "\t\t   &: Símbolo que representa o jogador.                                                                        \n"
                   "\t\t   *: Símbolo que representa uma parede, o jogador ao se movimentar não pode passar pela parede.               \n"
                   "\t\t   @: Símbolo que representa a chave para abrir a porta para finalizar a fase,                                 \n"
                   "\t\t   a porta abre no momento que o jogador interage com a chave.                                              \n"
                   "\t\t   D: Simbolo que representa a porta fechada.                                                                \n"
                   "\t\t   =: Simbolo que representa a porta aberta quando o jogador interage com a chave.                             \n"
                   "\t\t   O: Símbolo que representa um botão que o usuário pode interagir, o botão fica no chão e o jogador deve ficar em cima dele para poder interagir.\n"
                   "\t\t   #: Simbolo que representa um espinho. A fase é reiniciada quando o jogador toca no espinho, caso a fase seja reiniciada três vezes, o jogo volta para o menu principal.\n"
				   "\t\t   >: Simbolo que representa um teletransporte. O teletransporte sempre deve                                    \n"
                   "\t\t   vir em pares, quando o jogador toca em um ele e transportado para outro e vice-versa.                        \n"
                   "\t\t   X: Simbolo que representa o monstro nível 1. Esse monstro tem um movimento aleatório para cima, para esquerda, para baixo e para direita. Caso o monstro toque no jogador, a fase é reiniciada.\n"
                   "\t\t   V: Simbolo que representa o monstro nível 2. Esse monstro tem uma inteligência para seguir o jogador. Caso o monstro toque no jogador, a fase é reiniciada.\n";
                   
                   
		
		  // Exibição do texto
		    int t;
		    for (t = 0; frase[t] != '\0'; t++) {
		        printf("%c", frase[t]);
		        fflush(stdout);
		        usleep(1000);
		    }
		    
		   
		
		    printf("\n\n\t\t\t\tDigite 1 e de enter para continuar...");
		    int lixo;
		    printf("\n\t\t\t\t==> ");
		    scanf("%d", &lixo);
			break;
			
		case (3):	

			system("cls");
        	char encerrando[] = "\n\n\t\t\t\t\t\t   . . . . . . ENCERRANDO JOGO . . . . . . ";
			
			int e;
		    for (e = 0; encerrando[e] != '\0'; e++) {
		        printf("%c", encerrando[e]);
		        fflush(stdout);
		        usleep(20000);
		    }
		     Sleep(500);
		    system("cls");
          	
			printf("Jogo encerrado");
			system("cls");
		
		    
			break;
				
		}
			
		}


return 0;
}
endconio();
